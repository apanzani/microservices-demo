version: '3.7'
services:
  config-server:
    image: ${GROUP_ID}/config.server:${SERVICE_VERSION:-latest}
    ports:
      - "5007:5007"
      - "8888:8888"
    volumes:
      - "./docker-logs:/workspace/config-server/logs"
    environment:
      - "JAVA_OPTS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5007 -Xms128m -Xmx256m"
      - "ENCRYPT_KEY=${ENCRYPT_KEY}"
      - "SPRING_SECURITY_USER_PASSWORD=${SPRING_SECURITY_USER_PASSWORD}"
    networks:
      - ${GLOBAL_NETWORK:-services}
  elastic-query-service-1:
    image: ${GROUP_ID}/elastic.query.service:${SERVICE_VERSION:-latest}
    ports:
      - "5008:5008"
      - "8184:8184"
    volumes:
      - "./docker-logs:/workspace/elastic-query-service/logs"
      - "./check-config-server-started.sh:/usr/local/bin/check-config-server-started.sh"
      - "./check-keycloak-server-started.sh:/usr/local/bin/check-keycloak-server-started.sh"
    user: root
    entrypoint: ["check-config-server-started.sh"]
    depends_on:
      - config-server
      - elastic-1
      - postgres
    environment:
      - "JAVA_OPTS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5008 -Xms128m -Xmx256m"
      - "LOGGING_LEVEL_COM_MICROSERVICES_DEMO=info"
      - "LOGGING_LEVEL_ROOT=info"
      - "ELASTIC-CONFIG_INDEX-NAME=twitter-index"
      - "ELASTIC-CONFIG_CONNECTION-URL=http://elastic-1:9200"
      - "SPRING_DATA_ELASTICSEARCH_CLIENT_REACTIVE_ENDPOINTS=elastic-1:9200"
      - "SERVER_PORT=8184"
      - "SERVER_SERVLET_CONTEXT-PATH=/elastic-query-service"
      - "SPRING_CLOUD_CONFIG_URI=http://config-server:8888"
      - "ENCRYPT_KEY=${ENCRYPT_KEY}"
      - "SPRING_SECURITY_USER_PASSWORD=${SPRING_SECURITY_USER_PASSWORD}"
      - "API_PASSWORD=${API_PASSWORD}"
      - "SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER-URI=http://keycloak-authorization-server:9001/realms/microservices-realm"
      - "SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK-SET-URI=http://keycloak-authorization-server:9001/realms/microservices-realm/protocol/openid-connect/certs"
      - "SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_KEYCLOAK_TOKEN-URI=http://keycloak-authorization-server:9001/realms/microservices-realm/protocol/openid-connect/token"
      - "SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/keycloak?currentSchema=keycloak&binaryTransfer=true&reWriteBatchedInserts=true"
      - "LOG_APP-NAME=elastic-query-service-1"
      - "SPRING_ZIPKIN_SENDER_TYPE=kafka"
      - "SPRING_KAFKA_BOOTSTRAP-SERVERS=kafka-broker-1:9092"
      - "POSTGRES_PWD=password"
    networks:
      - ${GLOBAL_NETWORK:-services}
  elastic-query-web-client:
    image: ${GROUP_ID}/elastic.query.web.client:${SERVICE_VERSION:-latest}
    ports:
      - "5010:5010"
      - "8185:8185"
    volumes:
      - "./docker-logs:/workspace/elastic-query-web-client/logs"
      - "./check-config-server-started.sh:/usr/local/bin/check-config-server-started.sh"
      - "./check-keycloak-server-started.sh:/usr/local/bin/check-keycloak-server-started.sh"
    user: root
    entrypoint: [ "check-config-server-started.sh" ]
    depends_on:
      - config-server
    environment:
      - "JAVA_OPTS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5010 -Xms128m -Xmx256m"
      - "LOGGING_LEVEL_COM_MICROSERVICES_DEMO=INFO"
      - "LOGGING_LEVEL_ROOT=INFO"
      - "SERVER_PORT=8185"
      - "SERVER_SERVLET_CONTEXT-PATH=/elastic-query-web-client"
      - "SPRING_CLOUD_CONFIG_URI=http://config-server:8888"
      - "ELASTIC-QUERY-WEB-CLIENT_WEB-CLIENT_BASE-URL=http://elastic-query-service/elastic-query-service/documents"
      - "ELASTIC-QUERY-WEB-CLIENT_WEB-CLIENT_INSTANCES_0_ID=elastic-query-service-1"
      - "ELASTIC-QUERY-WEB-CLIENT_WEB-CLIENT_INSTANCES_0_HOST=elastic-query-service-1"
      - "ELASTIC-QUERY-WEB-CLIENT_WEB-CLIENT_INSTANCES_0_PORT=8184"
      - "ENCRYPT_KEY=${ENCRYPT_KEY}"
      - "SPRING_SECURITY_USER_PASSWORD=${SPRING_SECURITY_USER_PASSWORD}"
      - "API_PASSWORD=${API_PASSWORD}"
      - "SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_KEYCLOAK_ISSUER-URI=http://keycloak-authorization-server:9001/realms/microservices-realm"
      - "SECURITY_LOGOUT-SUCCESS-URL=http://elastic-query-web-client:8185/elastic-query-web-client"
      - "SECURITY_DEFAULT-CLIENT-REGISTRATION-ID=keycloak"
      - "LOG_APP-NAME=elastic-query-web-client"
      - "SPRING_ZIPKIN_SENDER_TYPE=kafka"
      - "SPRING_KAFKA_BOOTSTRAP-SERVERS=kafka-broker-1:9092"
    networks:
      - ${GLOBAL_NETWORK:-services}
#  elastic-query-web-client-2:
#    image: ${GROUP_ID}/elastic.query.web.client.2:${SERVICE_VERSION:-latest}
#    ports:
#      - "5011:5011"
#      - "8186:8186"
#    volumes:
#      - "./docker-logs:/workspace/elastic-query-web-client/logs"
#      - "./check-config-server-started.sh:/usr/local/bin/check-config-server-started.sh"
#      - "./check-keycloak-server-started.sh:/usr/local/bin/check-keycloak-server-started.sh"
#    user: root
#    entrypoint: [ "check-config-server-started.sh" ]
#    depends_on:
#      - config-server
#    environment:
#      - "JAVA_OPTS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5011 -Xms128m -Xmx256m"
#      - "LOGGING_LEVEL_COM_MICROSERVICES_DEMO=INFO"
#      - "LOGGING_LEVEL_ROOT=INFO"
#      - "SERVER_PORT=8186"
#      - "SERVER_SERVLET_CONTEXT-PATH=/elastic-query-web-client"
#      - "SPRING_CLOUD_CONFIG_URI=http://config-server:8888"
#      - "ELASTIC-QUERY-WEB-CLIENT_WEB-CLIENT_BASE-URL=http://elastic-query-service/elastic-query-service/documents"
#      - "ELASTIC-QUERY-WEB-CLIENT_WEB-CLIENT_INSTANCES_0_ID=elastic-query-service-1"
#      - "ELASTIC-QUERY-WEB-CLIENT_WEB-CLIENT_INSTANCES_0_HOST=elastic-query-service-1"
#      - "ELASTIC-QUERY-WEB-CLIENT_WEB-CLIENT_INSTANCES_0_PORT=8184"
#      - "ENCRYPT_KEY=${ENCRYPT_KEY}"
#      - "SPRING_SECURITY_USER_PASSWORD=${SPRING_SECURITY_USER_PASSWORD}"
#      - "API_PASSWORD=${API_PASSWORD}"
#      - "SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_KEYCLOAK_ISSUER-URI=http://keycloak-authorization-server:9001/realms/microservices-realm"
#      - "SECURITY_LOGOUT-SUCCESS-URL=http://elastic-query-web-client-2:8186/elastic-query-web-client"
#      - "SECURITY_DEFAULT-CLIENT-REGISTRATION-ID=keycloak"
#    networks:
#      - ${GLOBAL_NETWORK:-services}
  postgres:
    image: postgres:${POSTGRES_VERSION}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - "POSTGRES_DB=keycloak"
      - "POSTGRES_USER=keycloak"
      - "POSTGRES_PASSWORD=password"
    ports:
      - "5432:5432"
    networks:
      - ${GLOBAL_NETWORK:-postgres}
  pgadmin:
    image: dpage/pgadmin4
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    environment:
      - "PGADMIN_DEFAULT_EMAIL=admin@admin.com"
      - "PGADMIN_DEFAULT_PASSWORD=secret"
      - "PGADMIN_LISTEN_PORT=80"
    ports:
      - "9000:80"
    depends_on:
      - postgres
    networks:
      - ${GLOBAL_NETWORK:-postgres}

  keycloak-authorization-server:
    image: quay.io/keycloak/keycloak:${KEYCLOAK_VERSION:-latest}
    hostname: keycloak-server
    entrypoint: ["/opt/keycloak/bin/kc.sh", "start-dev"]
    ports:
      - "9001:9001"
    environment:
      - "KEYCLOAK_ADMIN=admin"
      - "KEYCLOAK_ADMIN_PASSWORD=admin"
      - "KC_LOG_LEVEL=INFO"
      - "KC_DB=postgres"
      - "KC_DB_USERNAME=keycloak"
      - "KC_DB_PASSWORD=password"
      - "KC_DB_SCHEMA=keycloak"
      - "KC_DB_URL_DATABASE=keycloak"
      - "KC_DB_URL_HOST=postgres"
      - "KC_HTTP_PORT=9001"
    depends_on:
      - postgres
    networks:
      - ${GLOBAL_NETWORK:-postgres}

volumes:
  postgres_data:
    driver: local
  pgadmin-data:
    driver: local